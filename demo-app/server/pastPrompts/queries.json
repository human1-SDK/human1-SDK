{
  "What planet is Han Solo from?": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT planets.name  FROM people  JOIN planets ON people.homeworld_id = planets._id  WHERE people.name = 'Han Solo';",
      "correctResponse": true
    }
  ],
  "what species is chewbacca?": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT s.name  FROM people p  JOIN species s ON p.species_id = s._id  WHERE p.name = 'Chewbacca';",
      "correctResponse": true
    }
  ],
  "What planet do ewoks live on?": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT planets.name FROM species JOIN planets ON species.homeworld_id = planets._id WHERE species.name = 'Ewok';",
      "correctResponse": true
    }
  ],
  "What planets are in the Phantom Menace?": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT p.name FROM planets p JOIN planets_in_films pf ON p._id = pf.planet_id JOIN films f ON pf.film_id = f._id WHERE f.title = 'The Phantom Menace';",
      "correctResponse": true
    }
  ],
  "What planet is Will Sentance from?\n": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT planets.name  FROM people  JOIN planets ON people.homeworld_id = planets._id  WHERE people.name = 'Will Sentance';",
      "correctResponse": true
    }
  ],
  "Where is Han Solo from?\n": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT planets.name  FROM people  JOIN planets ON people.homeworld_id = planets._id  WHERE people.name = 'Han Solo';",
      "correctResponse": true
    }
  ],
  "what does luke look like?\n\n": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT name, hair_color, skin_color, eye_color, height, mass  FROM people  WHERE name = 'Luke Skywalker';",
      "correctResponse": true
    }
  ],
  "what does leia call home?\n\n": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT planets.name  FROM people  JOIN planets ON people.homeworld_id = planets._id  WHERE people.name = 'Leia Organa';",
      "correctResponse": true
    }
  ],
  "What is Chewbacca's means of conveyance?": [
    {
      "systemContent": "You're a backend database software engineer that needs to take a human language prompt and generate a SQL query using only the provided schema. \n        You will be querying a PostgreSQL database containing data about Star Wars. \n        For every request, first break the query into logical steps or subtasks. Think through:\n\n          1. What data needs to be selected and what entity or entities in the database schema the user is asking for in the return value (For example, ask yourself is the user asking for a person's name, or a planet, or a species, etc.).\n          2. Which tables are involved.\n          3. How the tables are related (JOINs).\n          4. What filters or conditions apply.\n          5. How the data should be grouped or ordered.\n          6. Any derived values, subqueries, or aggregations needed.\n          7. Do not make any assumptions based on your previous star wars related knowledge.\n\n        Once you've planned out the logic in your head, write only the final SQL query. Do not include the planning in the output — just use it to improve accuracy.\n\n        Here are some examples for reference as you break down the steps:\n\n        These three prompts should have generated the same response.\n        The first did not generate a correctly formed SQL response:\n        \n        PROMPT1: \"What is the name of the droid with red eyes from the planet of the women with black hair and brown eyes\"\n        generated this incorrect response:\n        \"SELECT p1.name \n        FROM people p1 \n        JOIN people p2 ON p1.homeworld_id = p2.homeworld_id \n        JOIN species s1 ON p1.species_id = s1._id \n        JOIN species s2 ON p2.species_id = s2._id \n        WHERE s1.name = 'Droid' \n        AND p1.eye_color = 'red' \n        AND p2.hair_color = 'black' \n        AND p2.eye_color = 'brown';\"\n\n\n        This wording did generate a correct response:\n        PROMPT2: \"What is the name of the droid with red eyes from the same planet as the woman with black hair and brown eyes\"\n        generated this correct response:\n        \"SELECT p.name \n        FROM people p \n        JOIN species s ON p.species_id = s._id \n        WHERE p.eye_color = 'red' \n        AND s.name = 'Droid' \n        AND p.homeworld_id =      \n        (SELECT p2.homeworld_id      \n        FROM people p2      \n        WHERE p2.hair_color = 'black' \n        AND p2.eye_color = 'brown' A\n        ND p2.gender = 'female')\"\n\n        This wording did generate a correct response:\n        PROMPT3: \"there is a women with black hair and brown eyes, find her planet then tell me what is the name of the droid with red eyes from her planet\"\n        Generated this correct response:\n        \"SELECT droids.name \n        FROM people AS women \n        JOIN planets ON women.homeworld_id = planets._id \n        JOIN people AS droids ON droids.homeworld_id = planets._id \n        JOIN species ON droids.species_id = species._id \n        WHERE women.gender = 'female'    \n        AND women.hair_color = 'black'    \n        AND women.eye_color = 'brown'    \n        AND species.name = 'Droid'    \n        AND droids.eye_color = 'red';\"\n\n\n        Here is the database schema:\n        ",
      "returnedQuery": "SELECT vessels.name  FROM people  JOIN pilots ON people._id = pilots.person_id JOIN vessels ON pilots.vessel_id = vessels._id WHERE people.name = 'Chewbacca';",
      "correctResponse": true
    }
  ]
}